> (= foo (new-namespace (new-namespace (new-namespace)) (new-namespace)))
#<namespace (len 4)>

> foo!bar
nil

> (= foo!bar 10)
10

> foo!bar
10

> foo!qux
nil


> (eval-w/ (new-namespace) foo)
error: undefined variable: foo


> (= bar (new-namespace namespace))
#<namespace (len 3)>

> (eval-w/ bar foo)
#<namespace (len 4)>

> (eval-w/ bar (= foo 10))
10

> (eval-w/ bar foo)
10

> foo
#<namespace (len 4)>


> (= foo (new-namespace namespace))
#<namespace (len 3)>

> (= bar (new-namespace foo))
#<namespace (len 4)>

> (eval-w/ foo
    (def foo (x)
      (bar x))
    (def bar (x)
      x))
#<fn:bar>

> (eval-w/ bar
    (foo 50))
50

> (eval-w/ bar
    (def bar (x)
      10)
    (foo 50))
50

> (eval-w/ foo
    (dynamic bar bar))
#<fn:bar>

> (eval-w/ bar
    (foo 50))
10

> (eval-w/ foo
    (foo 50))
50


;=============================================================================
;  Dynamic variables
;=============================================================================

> (dynamic dyn-foo 5)
5

> dyn-foo
5

> (ac-compile 'dyn-foo)
(#<fn:ac-lookup-global-arg> (#<fn:ac-lookup-global-raw> #<namespace (len 2)> (racket-quote dyn-foo)))

> (eval 'dyn-foo)
5

> (= dyn-foo 10)
10

> dyn-foo
10


;=============================================================================
;  Implicit namespace creation
;=============================================================================

> (def nou ())
#<fn:nou>

> namespace
#<namespace (len 2)>

> (def nou ())
*** redefining nou
#<fn:nou>

> namespace
#<namespace (len 2)>

> (import time)
 loading:  time.arc
 skipping: strings.arc
nil

> (import time)
 skipping: time.arc
nil

> namespace
#<namespace (len 2)>

> (reimport time)
 loading:  time.arc
 loading:  strings.arc
*** creating new namespace to avoid redefining utime
nil

> namespace
#<namespace (len 3)>


;=============================================================================
;  Namespace reversal
;=============================================================================

> (= arc    (new-namespace arc3-namespace))
#<namespace (len 2)>

> (= arubic (new-namespace arc))
#<namespace (len 3)>


> (eval-w/ arc
    (def qux (x)
      10)
    (def nou (x)
      29))
#<fn:nou>

> (eval-w/ arubic
    (def qux (x)
      x)
    (def corge (x)
      (+ (qux x) (nou x))))
#<fn:corge>


> (eval-w/ arc
    (qux 50))
10

> (eval-w/ arubic
    (qux 50))
50

> (eval-w/ arc
    (corge 50))
error: undefined variable: corge

> (eval-w/ arubic
    (corge 50))
79


> (zap namespace-fn arubic rev)
#<namespace (len 3)>


> (eval-w/ arc
    (qux 50))
10

> (eval-w/ arubic
    (qux 50))
10

> (eval-w/ arc
    (corge 50))
error: undefined variable: corge

> (eval-w/ arubic
    (corge 50))
79
