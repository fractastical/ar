(assign repl-eof-value (uniq))

(def repl ()
  (on-err (fn (c)
            ;(debug "repl" c)
            (disp "error: ")
            (disp (details c))
            (racket-newline)
            (repl))
          (fn ()
            (disp "arc> ")
            (let expr (sread (stdin) repl-eof-value)
              (if (is expr repl-eof-value)
                    (racket-newline)
                  (do (racket-read-line)
                      (let val (eval expr)
                        (write val)
                        (racket-newline)
                        (assign that val)
                        (assign thatexpr expr)
                        (repl))))))))

(repl)
